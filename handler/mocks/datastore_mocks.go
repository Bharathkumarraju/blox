// Automatically generated by MockGen. DO NOT EDIT!
// Source: store/datastore.go

package mocks

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of DataStore interface
type MockDataStore struct {
	ctrl     *gomock.Controller
	recorder *_MockDataStoreRecorder
}

// Recorder for MockDataStore (not exported)
type _MockDataStoreRecorder struct {
	mock *MockDataStore
}

func NewMockDataStore(ctrl *gomock.Controller) *MockDataStore {
	mock := &MockDataStore{ctrl: ctrl}
	mock.recorder = &_MockDataStoreRecorder{mock}
	return mock
}

func (_m *MockDataStore) EXPECT() *_MockDataStoreRecorder {
	return _m.recorder
}

func (_m *MockDataStore) AddEvent(key string, value string) error {
	ret := _m.ctrl.Call(_m, "AddEvent", key, value)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockDataStoreRecorder) AddEvent(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "AddEvent", arg0, arg1)
}

func (_m *MockDataStore) GetEvent(key string) (map[string]string, error) {
	ret := _m.ctrl.Call(_m, "GetEvent", key)
	ret0, _ := ret[0].(map[string]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockDataStoreRecorder) GetEvent(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetEvent", arg0)
}

func (_m *MockDataStore) GetWithPrefix(key string) (map[string]string, error) {
	ret := _m.ctrl.Call(_m, "GetWithPrefix", key)
	ret0, _ := ret[0].(map[string]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockDataStoreRecorder) GetWithPrefix(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetWithPrefix", arg0)
}

func (_m *MockDataStore) Get(key string) (map[string]string, error) {
	ret := _m.ctrl.Call(_m, "Get", key)
	ret0, _ := ret[0].(map[string]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockDataStoreRecorder) Get(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Get", arg0)
}

func (_m *MockDataStore) Add(key string, value string) error {
	ret := _m.ctrl.Call(_m, "Add", key, value)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockDataStoreRecorder) Add(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Add", arg0, arg1)
}

func (_m *MockDataStore) CloseDataStore() {
	_m.ctrl.Call(_m, "CloseDataStore")
}

func (_mr *_MockDataStoreRecorder) CloseDataStore() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CloseDataStore")
}
