package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

/*TaskDetailNetworkBindingModel task detail network binding model

swagger:model TaskDetailNetworkBindingModel
*/
type TaskDetailNetworkBindingModel struct {

	/* bind IP

	Required: true
	*/
	BindIP *string `json:"bindIP"`

	/* container port

	Required: true
	*/
	ContainerPort *int32 `json:"containerPort"`

	/* host port

	Required: true
	*/
	HostPort *int32 `json:"hostPort"`

	/* protocol
	 */
	Protocol string `json:"protocol,omitempty"`
}

// Validate validates this task detail network binding model
func (m *TaskDetailNetworkBindingModel) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBindIP(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateContainerPort(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateHostPort(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TaskDetailNetworkBindingModel) validateBindIP(formats strfmt.Registry) error {

	if err := validate.Required("bindIP", "body", m.BindIP); err != nil {
		return err
	}

	return nil
}

func (m *TaskDetailNetworkBindingModel) validateContainerPort(formats strfmt.Registry) error {

	if err := validate.Required("containerPort", "body", m.ContainerPort); err != nil {
		return err
	}

	return nil
}

func (m *TaskDetailNetworkBindingModel) validateHostPort(formats strfmt.Registry) error {

	if err := validate.Required("hostPort", "body", m.HostPort); err != nil {
		return err
	}

	return nil
}
