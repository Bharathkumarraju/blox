// Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the License). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the license file accompanying this file. This file is distributed
// on an AS IS BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/aws/amazon-ecs-event-stream-handler/internal/models"
)

// FilterInstancesReader is a Reader for the FilterInstances structure.
type FilterInstancesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FilterInstancesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewFilterInstancesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 500:
		result := NewFilterInstancesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewFilterInstancesOK creates a FilterInstancesOK with default headers values
func NewFilterInstancesOK() *FilterInstancesOK {
	return &FilterInstancesOK{}
}

/*FilterInstancesOK handles this case with default header values.

Filter instances - success
*/
type FilterInstancesOK struct {
	Payload []*models.ContainerInstanceModel
}

func (o *FilterInstancesOK) Error() string {
	return fmt.Sprintf("[GET /instances/filter][%d] filterInstancesOK  %+v", 200, o.Payload)
}

func (o *FilterInstancesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFilterInstancesInternalServerError creates a FilterInstancesInternalServerError with default headers values
func NewFilterInstancesInternalServerError() *FilterInstancesInternalServerError {
	return &FilterInstancesInternalServerError{}
}

/*FilterInstancesInternalServerError handles this case with default header values.

Filter instances - unexpected error
*/
type FilterInstancesInternalServerError struct {
	Payload string
}

func (o *FilterInstancesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /instances/filter][%d] filterInstancesInternalServerError  %+v", 500, o.Payload)
}

func (o *FilterInstancesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
