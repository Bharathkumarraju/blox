package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/aws/amazon-ecs-event-stream-handler/internal/models"
)

// ListInstancesReader is a Reader for the ListInstances structure.
type ListInstancesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListInstancesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListInstancesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewListInstancesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewListInstancesOK creates a ListInstancesOK with default headers values
func NewListInstancesOK() *ListInstancesOK {
	return &ListInstancesOK{}
}

/*ListInstancesOK handles this case with default header values.

List instances response
*/
type ListInstancesOK struct {
	Payload []*models.ContainerInstanceModel
}

func (o *ListInstancesOK) Error() string {
	return fmt.Sprintf("[GET /instances][%d] listInstancesOK  %+v", 200, o.Payload)
}

func (o *ListInstancesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListInstancesDefault creates a ListInstancesDefault with default headers values
func NewListInstancesDefault(code int) *ListInstancesDefault {
	return &ListInstancesDefault{
		_statusCode: code,
	}
}

/*ListInstancesDefault handles this case with default header values.

Unexpected error listing instances
*/
type ListInstancesDefault struct {
	_statusCode int

	Payload *models.ErrorModel
}

// Code gets the status code for the list instances default response
func (o *ListInstancesDefault) Code() int {
	return o._statusCode
}

func (o *ListInstancesDefault) Error() string {
	return fmt.Sprintf("[GET /instances][%d] ListInstances default  %+v", o._statusCode, o.Payload)
}

func (o *ListInstancesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
