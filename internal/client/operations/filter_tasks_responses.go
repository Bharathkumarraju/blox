package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/aws/amazon-ecs-event-stream-handler/internal/models"
)

// FilterTasksReader is a Reader for the FilterTasks structure.
type FilterTasksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FilterTasksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewFilterTasksOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewFilterTasksDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewFilterTasksOK creates a FilterTasksOK with default headers values
func NewFilterTasksOK() *FilterTasksOK {
	return &FilterTasksOK{}
}

/*FilterTasksOK handles this case with default header values.

Filter tasks response
*/
type FilterTasksOK struct {
	Payload []*models.TaskModel
}

func (o *FilterTasksOK) Error() string {
	return fmt.Sprintf("[GET /tasks/filter][%d] filterTasksOK  %+v", 200, o.Payload)
}

func (o *FilterTasksOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFilterTasksDefault creates a FilterTasksDefault with default headers values
func NewFilterTasksDefault(code int) *FilterTasksDefault {
	return &FilterTasksDefault{
		_statusCode: code,
	}
}

/*FilterTasksDefault handles this case with default header values.

Unexpected error filtering tasks
*/
type FilterTasksDefault struct {
	_statusCode int

	Payload *models.ErrorModel
}

// Code gets the status code for the filter tasks default response
func (o *FilterTasksDefault) Code() int {
	return o._statusCode
}

func (o *FilterTasksDefault) Error() string {
	return fmt.Sprintf("[GET /tasks/filter][%d] FilterTasks default  %+v", o._statusCode, o.Payload)
}

func (o *FilterTasksDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
