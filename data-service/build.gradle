plugins {
    id "java"
    id 'blox-deploy'
}

description "Implementation of the Blox DataService"

compileJava {
    options.compilerArgs = [
            '-Amapstruct.defaultComponentModel=spring'
    ]
}

dependencies {
    compile project(":data-service-model")
    compile project(":lambda-spring")
    compile project(":json-rpc-lambda-server")

    compile(
            project(":lambda-logging"),
            'com.amazonaws:aws-java-sdk-dynamodb',

            'org.apache.commons:commons-lang3:3.6',

            'org.projectlombok:lombok',

            'org.mapstruct:mapstruct-jdk8',

            'org.springframework:spring-core',
            'org.springframework:spring-beans',
            'org.springframework:spring-context',
    )

    compileOnly(
            'org.mapstruct:mapstruct-processor',
    )

    testCompile(
            'junit:junit:4.12',
            'org.assertj:assertj-core:3.8+',
            'org.hamcrest:hamcrest-junit:2.+',
            'org.mockito:mockito-core',
            'org.slf4j:jcl-over-slf4j',
            'org.springframework:spring-test'
    )
}


task packageLambda(type: Zip, dependsOn: classes) {
    group "build"
    description "Create a Lambda deployment package with this package's code and all required libraries"

    from compileJava
    from processResources

    into('lib') {
        from configurations.runtime
    }
}

deployment {
    aws {
        profile stack.profile.toString()
        region stack.region.toString()
    }

    stackName "data-service"
    s3Bucket stack.s3Bucket.toString()

    templateFile file("templates/data_service.yml")

    lambdaFunctions {
        DataServiceHandler { zipFile = packageLambda }
    }
}

